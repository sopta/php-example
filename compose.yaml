services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - mynetwork

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - '.:/var/www/html'
    networks:
      - mynetwork
    environment:
      - DB_HOST=${DB_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  cli:
    image: composer:latest
    container_name: cli
    volumes:
      - .:/app
    working_dir: /app
    networks:
      - mynetwork

  k6:
    image: grafana/k6:latest
    container_name: k6
    volumes:
      - ./k6:/scripts
    entrypoint: [ "k6", "run" ]
    networks:
      - mynetwork

  db:
    image: mysql:8.0
    container_name: app_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - mynetwork

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: unless-stopped
    ports:
      - "3333:8080"
    depends_on:
      - db
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  db_data: